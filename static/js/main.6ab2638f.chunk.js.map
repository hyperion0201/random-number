{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","getInitialBoard","min","max","unique","history","current","handleSubmit","e","preventDefault","state","alert","rand","getRandom","setState","handleFormChange","target","id","value","checked","renderHistory","map","item","index","className","Math","floor","random","length","includes","resetBoard","this","style","padding","textAlign","borderBottom","onSubmit","for","type","class","onChange","onClick","href","rel","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ab2638f.chunk.js","sourcesContent":["import React from \"react\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./App.css\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = this.getInitialBoard()\n  }\n\n  getInitialBoard = () => {\n    return {\n      min: 0,\n      max: 100,\n      unique: false,\n      history: [],\n      current: null\n    }\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const {max, min, history} = this.state\n    if (min < 0 || max < 0) {\n      alert('Min hoặc max phải lớn hơn 0.')\n      return\n    }\n    if (max <= min) {\n      alert('Max phải lớn hơn min chứ ?')\n      return\n    }\n\n    const rand = this.getRandom()\n    if (rand === null) {\n      alert('Hết số để random cho nó khỏi bị trùng rồi...')\n      return\n    }\n    this.setState({\n      current: rand,\n      history: [...history, rand]\n    })\n  }\n\n  handleFormChange = (e) => {\n    const target = e.target\n\n    switch (target.id) {\n      case 'minNumber': {\n        this.setState({\n          min: e.target.value\n        })\n        break\n      }\n      case 'maxNumber': {\n        this.setState({\n          max: e.target.value\n        })\n        break\n      }\n      case 'useUnique': {\n        this.setState({\n          unique: target.checked,\n          history: [],\n          current: null\n        })\n        break\n      }\n      default: break\n    }\n  }\n\n  renderHistory = (history = []) => {\n    return history.map((item, index) => {\n      return (\n        <div className='history-item' key={item}>{item}</div>\n      )\n    })\n  }\n  \n  getRandom = () => {\n    const { history, unique, min, max} = this.state\n\n    if (!unique) {\n      return Math.floor(Math.random() * (max - min + 1) ) + min\n    }\n    else {\n      if (history.length === (max - min + 1)) {\n        // no available number to gen unique\n        return null\n      }\n      // loop rand until found a new diff number\n      while (true) {\n        let rand = Math.floor(Math.random() * (max - min + 1) ) + min\n        if (!history.includes(rand)) {\n          return rand\n        }\n      }\n    }\n  }\n\n  resetBoard = () => {\n    this.setState(this.getInitialBoard())\n  }\n\n  render() {\n    const { min, max, unique, history, current } = this.state\n\n    return (\n      <div className=\"App\">\n        <h1 style={{ padding: '10px', textAlign: \"center\" }}>Random Number Generator</h1>\n        <div className=\"main-container\">\n          <div className=\"history-tab\">\n            <h5 style={{borderBottom: '1px solid #f2f2f2'}}>HISTORY</h5>\n            <div className='history-board'>\n            {this.renderHistory(history)}\n            </div>\n          </div>\n          <div className=\"playground\">\n            <h5>PLAYGROUND</h5>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"num-form\">\n                <label for=\"minNumber\">Minimum</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control mb-2\"\n                  id=\"minNumber\"\n                  value={min}\n                  onChange={this.handleFormChange}\n                />\n              </div>\n              <div className=\"num-form\">\n                <label for=\"maxNumber\">Maximum</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control mb-2\"\n                  id=\"maxNumber\"\n                  value={max}\n                  onChange={this.handleFormChange}\n                />\n              </div>\n              <div class=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  class=\"form-check-input\"\n                  id=\"useUnique\"\n                  checked={unique}\n                  onChange={this.handleFormChange}\n                />\n                <label class=\"form-check-label\" for=\"useUnique\">\n                  Unique?\n                </label>\n              </div>\n              <br/>\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n              <button type='button' onClick={this.resetBoard} class=\"btn btn-secondary\">Reset</button>\n            </form>\n            <h1 className='result'>{current}</h1>\n          </div>\n        </div>\n        <footer>\n          <span className='footer'>Viết bởi Hiếu loli trong lúc rảnh rỗi.\n          <a href=\"https://kobitoninc.slack.com/archives/CQWLH1SBH/p1624635544498400\" target='_blank' rel='noreferrer'> Tại sao lại có cái này?</a></span>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}